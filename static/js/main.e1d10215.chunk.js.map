{"version":3,"sources":["components/Player.js","components/Song.js","util.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","setCurrentSong","songs","currentSong","setIsPlaying","isPlaying","setSongs","audioRef","useRef","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","getTime","time","Math","floor","slice","useState","animationPercentage","className","onChange","value","min","max","type","size","icon","faAngleLeft","onClick","pause","faPause","faPlay","faAngleRight","ref","onLoadedData","onTimeUpdate","onLoadedMetadata","src","audio","onEnded","Song","cover","alt","name","artist","chillHop","color","uuidv4","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1d10215.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  setCurrentSong,\n  songs,\n  currentSong,\n  setIsPlaying,\n  isPlaying,\n  setSongs,\n}) => {\n  //Ref\n  const audioRef = useRef(null);\n  // useEffect\n\n  //event handlers\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) =>\n      song.id === nextPrev.id\n        ? { ...song, active: true }\n        : { ...song, active: false }\n    );\n    setSongs(newSongs);\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n\n        return;\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n    });\n  };\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const autoPlayHandler = () => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  //State\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          onChange={dragHandler}\n          min={0}\n          max={songInfo.duration || 0}\n          value={songInfo.currentTime}\n          type=\"range\"\n        />\n        <p>{getTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n          onClick={() => skipTrackHandler(\"skip-back\")}\n        />\n        <FontAwesomeIcon\n          className=\"play\"\n          onClick={playSongHandler}\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n      <audio\n        ref={audioRef}\n        onLoadedData={autoPlayHandler}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        src={currentSong.audio}\n        onEnded={() => skipTrackHandler(\"skip-forward\")}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name}></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import { React, useRef } from \"react\";\nimport Song from \"./Song\";\n\nconst LibrarySong = ({ song, songs, setCurrentSong, id, setSongs }) => {\n  const songSelectHandler = () => {\n    setCurrentSong(song);\n    //add active state\n    const newSongs = songs.map((song) =>\n      song.id === id ? { ...song, active: true } : { ...song, active: false }\n    );\n    setSongs(newSongs);\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ songs, setCurrentSong, id, setSongs, libraryStatus }) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            setSongs={setSongs}\n            id={song.id}\n            songs={songs}\n            song={song}\n            setCurrentSong={setCurrentSong}\n            key={song.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport {\n  fontAwesomeIcon,\n  FontAwesomeIcon,\n} from \"@fortawesome/react-fontawesome\";\nimport {\n  faMusic,\n  faArrowAltCircleDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        Libary\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from \"react\";\n//Adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\nimport data from \"./util\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport LibrarySong from \"./components/LibrarySong\";\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        libraryStatus={libraryStatus}\n        songs={songs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}